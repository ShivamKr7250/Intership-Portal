@model BlogVM

@{
    ViewData["Title"] = "Create Blog Post";
}

<div class="container" style="margin-top: 7rem;">
    <h1 class="mb-4">Create Blog Post</h1>

    <form method="post" asp-action="Create" enctype="multipart/form-data">
        <!-- Blog Title -->
        <div class="mb-3">
            <label asp-for="BlogPost.Title" class="form-label">Title</label>
            <input asp-for="BlogPost.Title" class="form-control" type="text" name="BlogPost.Title" />
            <span asp-validation-for="BlogPost.Title" class="text-danger"></span>
        </div>

        <!-- Short Description -->
        <div class="mb-3">
            <label asp-for="BlogPost.ShortDescription" class="form-label">Short Description</label>
            <input type="hidden" asp-for="BlogPost.ShortDescription" id="shortDescriptionInput" />
            <div id="shortDescriptionEditor" class="form-control" style="height: 150px;"></div>
            <small id="shortDescriptionCounter" class="text-muted">0/200 characters</small>
            <span asp-validation-for="BlogPost.ShortDescription" class="text-danger"></span>
        </div>

        <!-- Content -->
        <div class="mb-3">
            <label asp-for="BlogPost.Content" class="form-label">Content</label>
            <input type="hidden" asp-for="BlogPost.Content" id="contentInput" />
            <div id="contentEditor" class="form-control" style="height: 300px;"></div>
            <small id="contentCounter" class="text-muted">0/4000 characters</small>
            <span asp-validation-for="BlogPost.Content" class="text-danger"></span>
        </div>

        <!-- Category -->
        <div class="mb-3">
            <label asp-for="BlogPost.CategoryId" class="form-label">Category</label>
            <select asp-for="BlogPost.CategoryId" class="form-control" asp-items="Model.CategoryList">
                <option value="">-- Select a category --</option>
            </select>
            <span asp-validation-for="BlogPost.CategoryId" class="text-danger"></span>
        </div>

        <!-- Tags -->
        <div class="mb-3">
            <label asp-for="Tags" class="form-label">Tags</label>
            <input asp-for="BlogPost.Tags" class="form-control" type="text" name="BlogPost.Tags" />
            <span asp-validation-for="BlogPost.Tags" class="text-danger"></span>
        </div>

        <!-- Blog Thumbnail -->
        <div class="mb-3">
            <label asp-for="BlogPost.Image" class="form-label">Blog Thumbnail</label>
            <input asp-for="BlogPost.Image" class="form-control" type="file" name="BlogPost.Image" />
            <span asp-validation-for="BlogPost.Image" class="text-danger"></span>
        </div>

        <!-- Eligibility Criteria -->
        <h3 class="mt-4">Eligibility Criteria</h3>
        <div class="mb-3">
            <label asp-for="BlogPost.Batch" class="form-label">Batch</label>
            <input asp-for="BlogPost.Batch" class="form-control" type="number" />
        </div>

        <div class="mb-3">
            <label asp-for="BlogPost.Course" class="form-label">Course</label>
            <input asp-for="BlogPost.Course" class="form-control" type="text" />
        </div>

        <div class="mb-3">
            <label asp-for="BlogPost.MinimumCGPA" class="form-label">Minimum CGPA</label>
            <input asp-for="BlogPost.MinimumCGPA" class="form-control" type="number" step="0.01" />
        </div>

        <div class="mb-3">
            <label asp-for="BlogPost.MinimumMatricPercentage" class="form-label">Minimum Matric Percentage</label>
            <input asp-for="BlogPost.MinimumMatricPercentage" class="form-control" type="number" />
        </div>

        <div class="mb-3">
            <label asp-for="BlogPost.MinimumInterPercentage" class="form-label">Minimum Intermediate Percentage</label>
            <input asp-for="BlogPost.MinimumInterPercentage" class="form-control" type="number" />
        </div>

        <div class="mb-3">
            <label asp-for="BlogPost.MinimumGraduationPercentage" class="form-label">Minimum Graduation Percentage</label>
            <input asp-for="BlogPost.MinimumGraduationPercentage" class="form-control" type="number" />
        </div>

        <div class="mb-3">
            <label asp-for="BlogPost.MaximumPostGraduationCGPA" class="form-label">Maximum Post Graduation CGPA</label>
            <input asp-for="BlogPost.MaximumPostGraduationCGPA" class="form-control" type="number" step="0.01" />
        </div>

        <div class="mb-3">
            <label asp-for="BlogPost.ApplicationDeadline" class="form-label">Application Deadline</label>
            <input asp-for="BlogPost.ApplicationDeadline" class="form-control" type="datetime-local" />
        </div>

        <div class="mb-3">
            <label asp-for="BlogPost.HasYearGap" class="form-label">Year Gap</label>
            <div>
                <input type="radio" asp-for="BlogPost.HasYearGap" value="true" /> Yes
                <input type="radio" asp-for="BlogPost.HasYearGap" value="false" /> No
            </div>
        </div>

        <button type="submit" class="btn btn-primary">Submit</button>
    </form>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <!-- Quill.js Scripts -->
    <link href="https://cdn.jsdelivr.net/npm/quill@2.0.0/dist/quill.snow.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/quill@2.0.0/dist/quill.min.js"></script>

    <script>
        // Initialize Quill Editors
        const shortDescriptionEditor = new Quill('#shortDescriptionEditor', {
            modules: { toolbar: [['bold', 'italic'], ['link', { list: 'ordered' }, { list: 'bullet' }]] },
            theme: 'snow',
            placeholder: 'Enter a short description...',
        });

        const contentEditor = new Quill('#contentEditor', {
            modules: { toolbar: [['bold', 'italic'], ['link', { list: 'ordered' }, { list: 'bullet' }]] },
            theme: 'snow',
            placeholder: 'Write your blog content here...',
        });

        // Character counter function
        function updateCounter(editor, counterElement, maxLength) {
            const length = editor.getText().trim().length;
            counterElement.textContent = `${length}/${maxLength} characters`;
        }

        shortDescriptionEditor.on('text-change', function () {
            updateCounter(shortDescriptionEditor, document.getElementById('shortDescriptionCounter'), 300);
        });

        contentEditor.on('text-change', function () {
            updateCounter(contentEditor, document.getElementById('contentCounter'), 4000);
        });

        // Sync Editors and Validate on Submit
        document.querySelector('form').addEventListener('submit', function (event) {
            const shortDescription = shortDescriptionEditor.root.innerHTML.trim();
            const content = contentEditor.root.innerHTML.trim();

            // Validation
            if (shortDescriptionEditor.getText().trim().length > 300) {
                alert('Short Description exceeds the maximum length of 300 characters.');
                event.preventDefault();
                return;
            }

            if (contentEditor.getText().trim().length > 4000) {
                alert('Content exceeds the maximum length of 4000 characters.');
                event.preventDefault();
                return;
            }

            // Sync Quill content with hidden inputs
            document.getElementById('shortDescriptionInput').value = shortDescription;
            document.getElementById('contentInput').value = content;

            // Prevent duplicate submissions
            document.querySelector('button[type="submit"]').disabled = true;
        });
    </script>

}

